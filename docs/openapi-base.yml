components:
  securitySchemes:
    UserContext:
      type: apiKey
      in: header
      name: X-User-ID

  schemas:
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string

    EntityReference:
      type: object
      properties:
        id:
          type: string
        title:
          type: string

    OperationalRequirementReference:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        type:
          type: string
          enum: [ON, OR]

    # Enums
    DraftingGroup:
      type: string
      enum:
        - 4DT
        - AIRPORT
        - ASM_ATFCM
        - CRISIS_FAAS
        - FLOW
        - IDL
        - NM_B2B
        - NMUI
        - PERF
        - RRT
        - TCF
      description: |
        Drafting Group values:
        - 4DT: 4D-Trajectory
        - AIRPORT: Airport
        - ASM_ATFCM: ASM / ATFCM Integration
        - CRISIS_FAAS: Crisis and FAAS
        - FLOW: Flow
        - IDL: iDL
        - NM_B2B: NM B2B
        - NMUI: NMUI
        - PERF: Performance
        - RRT: Rerouting
        - TCF: TCF

    MilestoneEventType:
      type: string
      enum:
        - API_PUBLICATION
        - API_TEST_DEPLOYMENT
        - UI_TEST_DEPLOYMENT
        - OPS_DEPLOYMENT
        - API_DECOMMISSIONING
      description: |
        Milestone event types (independent, no sequencing):
        - API_PUBLICATION: API Publication milestone
        - API_TEST_DEPLOYMENT: API Test Deployment milestone
        - UI_TEST_DEPLOYMENT: UI Test Deployment milestone
        - OPS_DEPLOYMENT: Operations Deployment milestone
        - API_DECOMMISSIONING: API Decommissioning milestone

    # Setup Entity Schemas
    StakeholderCategory:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        parentCategory:
          $ref: '#/components/schemas/EntityReference'
        childCategories:
          type: array
          items:
            $ref: '#/components/schemas/EntityReference'

    StakeholderCategoryRequest:
      type: object
      required: [name, description]
      properties:
        name:
          type: string
        description:
          type: string
        parentCategoryId:
          type: string
          nullable: true

    DataCategory:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        parentCategory:
          $ref: '#/components/schemas/EntityReference'
        childCategories:
          type: array
          items:
            $ref: '#/components/schemas/EntityReference'

    DataCategoryRequest:
      type: object
      required: [name, description]
      properties:
        name:
          type: string
        description:
          type: string
        parentCategoryId:
          type: string
          nullable: true

    Service:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string

    ServiceRequest:
      type: object
      required: [name, description]
      properties:
        name:
          type: string
        description:
          type: string

    RegulatoryAspect:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string

    RegulatoryAspectRequest:
      type: object
      required: [name, description]
      properties:
        name:
          type: string
        description:
          type: string

    Wave:
      type: object
      properties:
        id:
          type: string
        year:
          type: integer
        quarter:
          type: integer
        date:
          type: string
          format: date
        name:
          type: string
          description: "Wave name in format 'year.quarter' (e.g., '2025.1')"

    WaveRequest:
      type: object
      required: [year, quarter, date]
      properties:
        year:
          type: integer
          minimum: 2024
          maximum: 2030
        quarter:
          type: integer
          minimum: 1
          maximum: 4
        date:
          type: string
          format: date

    # Operational Entity Schemas - UPDATED
    OperationalRequirement:
      type: object
      properties:
        itemId:
          type: string
        title:
          type: string
        versionId:
          type: string
        version:
          type: integer
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
        type:
          type: string
          enum: [ON, OR]
        statement:
          type: string
          description: "Rich text content"
        rationale:
          type: string
          description: "Rich text content"
        references:
          type: string
          description: "Rich text content"
        risksAndOpportunities:
          type: string
          description: "Rich text content"
        flows:
          type: string
          description: "Rich text content"
        flowExamples:
          type: string
          description: "Rich text content"
        drg:
          $ref: '#/components/schemas/DraftingGroup'
        implementedONs:
          type: array
          items:
            $ref: '#/components/schemas/OperationalRequirementReference'
          description: "Array of ON-type operational requirements implemented by this OR-type requirement"
        refinesParents:
          type: array
          items:
            $ref: '#/components/schemas/OperationalRequirementReference'
        impactsStakeholderCategories:
          type: array
          items:
            $ref: '#/components/schemas/EntityReference'
        impactsData:
          type: array
          items:
            $ref: '#/components/schemas/EntityReference'
        impactsServices:
          type: array
          items:
            $ref: '#/components/schemas/EntityReference'
        impactsRegulatoryAspects:
          type: array
          items:
            $ref: '#/components/schemas/EntityReference'

    OperationalRequirementRequest:
      type: object
      required: [title, type, statement, rationale, references, risksAndOpportunities, flows, flowExamples, drg, implementedONs, refinesParents, impactsStakeholderCategories, impactsData, impactsServices, impactsRegulatoryAspects]
      properties:
        title:
          type: string
        type:
          type: string
          enum: [ON, OR]
        statement:
          type: string
          description: "Rich text content"
        rationale:
          type: string
          description: "Rich text content"
        references:
          type: string
          description: "Rich text content"
        risksAndOpportunities:
          type: string
          description: "Rich text content"
        flows:
          type: string
          description: "Rich text content"
        flowExamples:
          type: string
          description: "Rich text content"
        drg:
          $ref: '#/components/schemas/DraftingGroup'
        implementedONs:
          type: array
          items:
            type: string
          description: "Array of ON-type operational requirement IDs (validation: must be ON type)"
        refinesParents:
          type: array
          items:
            type: string
        impactsStakeholderCategories:
          type: array
          items:
            type: string
        impactsData:
          type: array
          items:
            type: string
        impactsServices:
          type: array
          items:
            type: string
        impactsRegulatoryAspects:
          type: array
          items:
            type: string

    OperationalRequirementUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/OperationalRequirementRequest'
        - type: object
          required: [expectedVersionId]
          properties:
            expectedVersionId:
              type: string

    OperationalRequirementPatchRequest:
      allOf:
        - $ref: '#/components/schemas/OperationalRequirementRequest'
        - type: object
          required: [expectedVersionId]
          properties:
            expectedVersionId:
              type: string

    # Milestone Schema - UPDATED
    Milestone:
      type: object
      properties:
        id:
          type: string
          description: "Technical node ID (changes with each version)"
        milestoneKey:
          type: string
          description: "Stable milestone identifier (preserved across versions)"
        title:
          type: string
        description:
          type: string
        eventType:
          $ref: '#/components/schemas/MilestoneEventType'
        wave:
          type: object
          nullable: true
          properties:
            id:
              type: string
            name:
              type: string
              description: "Wave name in format 'year.quarter' (e.g., '2025.1')"

    MilestoneRequest:
      type: object
      required: [title, description, eventType]
      properties:
        title:
          type: string
        description:
          type: string
        eventType:
          $ref: '#/components/schemas/MilestoneEventType'
        waveId:
          type: string
          nullable: true

    MilestoneUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/MilestoneRequest'
        - type: object
          required: [expectedVersionId]
          properties:
            expectedVersionId:
              type: string
              description: Version ID of the OperationalChange (for optimistic locking)

    MilestoneCreateResponse:
      type: object
      properties:
        milestone:
          $ref: '#/components/schemas/Milestone'
        operationalChange:
          type: object
          properties:
            itemId:
              type: string
            versionId:
              type: string
            version:
              type: integer

    MilestoneUpdateResponse:
      type: object
      properties:
        milestone:
          $ref: '#/components/schemas/Milestone'
        operationalChange:
          type: object
          properties:
            itemId:
              type: string
            versionId:
              type: string
            version:
              type: integer

    # OperationalChange Schema - UPDATED
    OperationalChange:
      type: object
      properties:
        itemId:
          type: string
        title:
          type: string
        versionId:
          type: string
        version:
          type: integer
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
        purpose:
          type: string
          description: "Rich text content (renamed from description)"
        initialState:
          type: string
          description: "Rich text content (multiline)"
        finalState:
          type: string
          description: "Rich text content (multiline)"
        details:
          type: string
          description: "Rich text content (multiline)"
        visibility:
          type: string
          enum: [NM, NETWORK]
        drg:
          $ref: '#/components/schemas/DraftingGroup'
        satisfiesRequirements:
          type: array
          items:
            $ref: '#/components/schemas/OperationalRequirementReference'
        supersedsRequirements:
          type: array
          items:
            $ref: '#/components/schemas/OperationalRequirementReference'
        milestones:
          type: array
          items:
            $ref: '#/components/schemas/Milestone'

    OperationalChangeRequest:
      type: object
      required: [title, purpose, initialState, finalState, details, visibility, drg, satisfiesRequirements, supersedsRequirements, milestones]
      properties:
        title:
          type: string
        purpose:
          type: string
          description: "Rich text content (renamed from description)"
        initialState:
          type: string
          description: "Rich text content (multiline)"
        finalState:
          type: string
          description: "Rich text content (multiline)"
        details:
          type: string
          description: "Rich text content (multiline)"
        visibility:
          type: string
          enum: [NM, NETWORK]
        drg:
          $ref: '#/components/schemas/DraftingGroup'
        satisfiesRequirements:
          type: array
          items:
            type: string
        supersedsRequirements:
          type: array
          items:
            type: string
        milestones:
          type: array
          items:
            $ref: '#/components/schemas/MilestoneRequest'

    OperationalChangeUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/OperationalChangeRequest'
        - type: object
          required: [expectedVersionId]
          properties:
            expectedVersionId:
              type: string

    OperationalChangePatchRequest:
      type: object
      required: [expectedVersionId]
      properties:
        expectedVersionId:
          type: string
        title:
          type: string
        purpose:
          type: string
          description: "Rich text content (renamed from description)"
        initialState:
          type: string
          description: "Rich text content (multiline)"
        finalState:
          type: string
          description: "Rich text content (multiline)"
        details:
          type: string
          description: "Rich text content (multiline)"
        visibility:
          type: string
          enum: [NM, NETWORK]
        drg:
          $ref: '#/components/schemas/DraftingGroup'
        satisfiesRequirements:
          type: array
          items:
            type: string
        supersedsRequirements:
          type: array
          items:
            type: string
        milestones:
          type: array
          items:
            $ref: '#/components/schemas/MilestoneRequest'

    VersionHistory:
      type: object
      properties:
        versionId:
          type: string
        version:
          type: integer
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string

    # Management Entity Schemas
    Baseline:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string

    BaselineRequest:
      type: object
      required: [title]
      properties:
        title:
          type: string

    ODPEdition:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        type:
          type: string
          enum: [ALPHA, BETA, RELEASE]
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
        baseline:
          $ref: '#/components/schemas/EntityReference'
        startsFromWave:
          $ref: '#/components/schemas/EntityReference'

    ODPEditionRequest:
      type: object
      required: [title, type, baselineId, startsFromWaveId]
      properties:
        title:
          type: string
        type:
          type: string
          enum: [ALPHA, BETA, RELEASE]
        baselineId:
          type: string
        startsFromWaveId:
          type: string