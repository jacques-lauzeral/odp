paths:
  # Stakeholder Category Endpoints
  /stakeholder-categories:
    get:
      summary: List all stakeholder categories
      tags: [Stakeholder Categories]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi-base.yml#/components/schemas/StakeholderCategory'

    post:
      summary: Create new stakeholder category
      tags: [Stakeholder Categories]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/StakeholderCategoryRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/StakeholderCategory'

  /stakeholder-categories/{id}:
    get:
      summary: Get stakeholder category by ID
      tags: [Stakeholder Categories]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/StakeholderCategory'

    put:
      summary: Update stakeholder category
      tags: [Stakeholder Categories]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/StakeholderCategoryRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/StakeholderCategory'

    delete:
      summary: Delete stakeholder category
      tags: [Stakeholder Categories]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content

  # Data Category Endpoints
  /data-categories:
    get:
      summary: List all data categories
      tags: [Data Categories]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi-base.yml#/components/schemas/DataCategory'

    post:
      summary: Create new data category
      tags: [Data Categories]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/DataCategoryRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/DataCategory'

  /data-categories/{id}:
    get:
      summary: Get data category by ID
      tags: [Data Categories]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/DataCategory'

    put:
      summary: Update data category
      tags: [Data Categories]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/DataCategoryRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/DataCategory'

    delete:
      summary: Delete data category
      tags: [Data Categories]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content

  # Service Endpoints
  /services:
    get:
      summary: List all services
      tags: [Services]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi-base.yml#/components/schemas/Service'

    post:
      summary: Create new service
      tags: [Services]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/ServiceRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Service'

  /services/{id}:
    get:
      summary: Get service by ID
      tags: [Services]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Service'

    put:
      summary: Update service
      tags: [Services]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/ServiceRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Service'

    delete:
      summary: Delete service
      tags: [Services]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content

  # Document Endpoints
  /documents:
    get:
      summary: List all documents
      tags: [Documents]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi-base.yml#/components/schemas/Document'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

    post:
      summary: Create new document
      tags: [Documents]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/DocumentRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Document'
        '400':
          description: Bad Request - Invalid document data
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

  /documents/{id}:
    get:
      summary: Get document by ID
      tags: [Documents]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Document'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

    put:
      summary: Update document
      tags: [Documents]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/DocumentRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Document'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

    delete:
      summary: Delete document
      tags: [Documents]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

  # Wave Endpoints
  /waves:
    get:
      summary: List all waves
      tags: [Waves]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi-base.yml#/components/schemas/Wave'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

    post:
      summary: Create new wave
      tags: [Waves]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/WaveRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Wave'
        '400':
          description: Bad Request - Invalid year/quarter combination or date
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

  /waves/{id}:
    get:
      summary: Get wave by ID
      tags: [Waves]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Wave'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

    put:
      summary: Update wave
      tags: [Waves]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/WaveRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Wave'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'
        '400':
          description: Bad Request - Invalid year/quarter combination or date
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

    delete:
      summary: Delete wave
      tags: [Waves]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'