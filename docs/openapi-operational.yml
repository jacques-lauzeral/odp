openapi: 3.0.3

info:
  title: ODP REST API / Operational Requirement and Change Management
  description: Operational Requirement and Change Management API
  version: 1.0.0
  contact:
    name: ODP Development Team

paths:
  # Operational Requirement Endpoints
  /operational-requirements:
    get:
      summary: List all operational requirements (latest versions, baseline context, wave filtered, and content filtered)
      tags: [Operational Requirements]
      parameters:
        # Existing context parameters
        - name: baseline
          in: query
          required: false
          schema:
            type: string
          description: "Optional baseline ID to get requirements as they existed at baseline time"
        - name: fromWave
          in: query
          required: false
          schema:
            type: string
          description: "Optional wave ID for filtering (requirements referenced by changes with milestones at/after this wave)"

        # Content filtering parameters - UPDATED
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [ON, OR]
          description: "Filter by requirement type. Omit for all types."
          example: "OR"
        - name: drg
          in: query
          required: false
          schema:
            type: string
            enum: [4DT, AIRPORT, ASM_ATFCM, CRISIS_FAAS, FLOW, IDL, NM_B2B, NMUI, PERF, RRT, TCF]
          description: "Filter by Drafting Group. Omit for all DRG values."
          example: "4DT"
        - name: title
          in: query
          required: false
          schema:
            type: string
          description: "Filter by title pattern matching (existing behavior preserved)"
          example: "authentication"
        - name: text
          in: query
          required: false
          schema:
            type: string
          description: "Full-text search across title, statement, rationale, flows, flowExamples, references, and risksAndOpportunities"
          example: "security authentication"
        - name: dataCategory
          in: query
          required: false
          schema:
            type: string
          description: "Filter by data category ID(s). Comma-separated for OR logic."
          example: "123,456,789"
        - name: stakeholderCategory
          in: query
          required: false
          schema:
            type: string
          description: "Filter by stakeholder category ID(s). Comma-separated for OR logic."
          example: "123,456"
        - name: service
          in: query
          required: false
          schema:
            type: string
          description: "Filter by service ID(s). Comma-separated for OR logic."
          example: "789,101"
        - name: regulatoryAspect
          in: query
          required: false
          schema:
            type: string
          description: "Filter by regulatory aspect ID(s). Comma-separated for OR logic."
          example: "234,567"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi-base.yml#/components/schemas/OperationalRequirement'
        '400':
          description: Bad Request - Invalid baseline, wave ID, or filter parameters
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

    post:
      summary: Create new operational requirement
      tags: [Operational Requirements]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/OperationalRequirementRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/OperationalRequirement'
        '400':
          description: Validation Error - Invalid DRG value, implementedONs type mismatch, or missing required fields
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

  /operational-requirements/{id}:
    get:
      summary: Get operational requirement by ID (latest version, baseline context, or wave filtered)
      tags: [Operational Requirements]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: "Operational Requirement Item ID"
        - name: baseline
          in: query
          required: false
          schema:
            type: string
          description: "Optional baseline ID to get requirement as it existed at baseline time"
        - name: fromWave
          in: query
          required: false
          schema:
            type: string
          description: "Optional wave ID for filtering"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/OperationalRequirement'
        '404':
          description: Not Found - Requirement not found or not captured in specified context
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'
        '400':
          description: Bad Request - Invalid baseline or wave ID
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

    put:
      summary: Update operational requirement (creates new version with complete replacement)
      tags: [Operational Requirements]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/OperationalRequirementUpdateRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/OperationalRequirement'
        '409':
          description: Version Conflict
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'
        '400':
          description: Validation Error - Invalid DRG value or implementedONs type constraint violation
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

    patch:
      summary: Patch operational requirement (creates new version with partial updates)
      tags: [Operational Requirements]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/OperationalRequirementPatchRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/OperationalRequirement'
        '409':
          description: Version Conflict
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'
        '400':
          description: Validation Error - Invalid DRG value or implementedONs type constraint violation
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

    delete:
      summary: Delete operational requirement (all versions)
      tags: [Operational Requirements]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content

  /operational-requirements/{id}/versions:
    get:
      summary: Get version history for operational requirement
      tags: [Operational Requirements]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi-base.yml#/components/schemas/VersionHistory'

  /operational-requirements/{id}/versions/{versionNumber}:
    get:
      summary: Get specific version of operational requirement
      tags: [Operational Requirements]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: versionNumber
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/OperationalRequirement'

  # Operational Change Endpoints
  /operational-changes:
    get:
      summary: List all operational changes (latest versions, baseline context, wave filtered, and content filtered)
      tags: [Operational Changes]
      parameters:
        # Existing context parameters
        - name: baseline
          in: query
          required: false
          schema:
            type: string
          description: "Optional baseline ID to get changes as they existed at baseline time"
        - name: fromWave
          in: query
          required: false
          schema:
            type: string
          description: "Optional wave ID for filtering (changes with milestones at/after this wave)"

        # Content filtering parameters - UPDATED
        - name: visibility
          in: query
          required: false
          schema:
            type: string
            enum: [NM, NETWORK]
          description: "Filter by change visibility. Omit for all visibility types."
          example: "NETWORK"
        - name: drg
          in: query
          required: false
          schema:
            type: string
            enum: [4DT, AIRPORT, ASM_ATFCM, CRISIS_FAAS, FLOW, IDL, NM_B2B, NMUI, PERF, RRT, TCF]
          description: "Filter by Drafting Group. Omit for all DRG values."
          example: "FLOW"
        - name: title
          in: query
          required: false
          schema:
            type: string
          description: "Filter by title pattern matching (existing behavior preserved)"
          example: "database migration"
        - name: text
          in: query
          required: false
          schema:
            type: string
          description: "Full-text search across title, purpose, initialState, finalState, and details rich text fields"
          example: "performance optimization"
        - name: stakeholderCategory
          in: query
          required: false
          schema:
            type: string
          description: "Filter by stakeholder category ID(s) via SATISFIES/SUPERSEDES requirements. Comma-separated for OR logic."
          example: "123,456"
        - name: dataCategory
          in: query
          required: false
          schema:
            type: string
          description: "Filter by data category ID(s) via SATISFIES/SUPERSEDES requirements. Comma-separated for OR logic."
          example: "789,101"
        - name: service
          in: query
          required: false
          schema:
            type: string
          description: "Filter by service ID(s) via SATISFIES/SUPERSEDES requirements. Comma-separated for OR logic."
          example: "234,567"
        - name: regulatoryAspect
          in: query
          required: false
          schema:
            type: string
          description: "Filter by regulatory aspect ID(s) via SATISFIES/SUPERSEDES requirements. Comma-separated for OR logic."
          example: "345,678"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi-base.yml#/components/schemas/OperationalChange'
        '400':
          description: Bad Request - Invalid baseline, wave ID, or filter parameters
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

    post:
      summary: Create new operational change
      tags: [Operational Changes]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/OperationalChangeRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/OperationalChange'
        '400':
          description: Validation Error - Invalid DRG value, milestone eventType, or missing required fields
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

  /operational-changes/{id}:
    get:
      summary: Get operational change by ID (latest version, baseline context, or wave filtered)
      tags: [Operational Changes]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: "Operational Change Item ID"
        - name: baseline
          in: query
          required: false
          schema:
            type: string
          description: "Optional baseline ID to get change as it existed at baseline time"
        - name: fromWave
          in: query
          required: false
          schema:
            type: string
          description: "Optional wave ID for filtering"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/OperationalChange'
        '404':
          description: Not Found - Change not found or not captured in specified context
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'
        '400':
          description: Bad Request - Invalid baseline or wave ID
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

    put:
      summary: Update operational change (creates new version with complete replacement)
      tags: [Operational Changes]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/OperationalChangeUpdateRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/OperationalChange'
        '409':
          description: Version Conflict
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'
        '400':
          description: Validation Error - Invalid DRG value or milestone eventType
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

    patch:
      summary: Patch operational change (creates new version with partial updates)
      tags: [Operational Changes]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'openapi-base.yml#/components/schemas/OperationalChangePatchRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/OperationalChange'
        '409':
          description: Version Conflict
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'
        '400':
          description: Validation Error - Invalid DRG value or milestone eventType
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/Error'

    delete:
      summary: Delete operational change (all versions)
      tags: [Operational Changes]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content

  /operational-changes/{id}/versions:
    get:
      summary: Get version history for operational change
      tags: [Operational Changes]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'openapi-base.yml#/components/schemas/VersionHistory'

  /operational-changes/{id}/versions/{versionNumber}:
    get:
      summary: Get specific version of operational change
      tags: [Operational Changes]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: versionNumber
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'openapi-base.yml#/components/schemas/OperationalChange'